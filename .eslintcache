[{"/Users/bj/dev/javascript/full-stack/pictogram/src/context/appContext.js":"1","/Users/bj/dev/javascript/full-stack/pictogram/src/index.js":"2","/Users/bj/dev/javascript/full-stack/pictogram/src/reportWebVitals.js":"3","/Users/bj/dev/javascript/full-stack/pictogram/src/App.js":"4","/Users/bj/dev/javascript/full-stack/pictogram/src/components/pages/SubscribedUserPosts.js":"5","/Users/bj/dev/javascript/full-stack/pictogram/src/components/pages/SignUp.js":"6","/Users/bj/dev/javascript/full-stack/pictogram/src/components/layout/Navbar.js":"7","/Users/bj/dev/javascript/full-stack/pictogram/src/components/pages/Logout.js":"8","/Users/bj/dev/javascript/full-stack/pictogram/src/components/profile/EditUser.js":"9","/Users/bj/dev/javascript/full-stack/pictogram/src/components/profile/User.js":"10","/Users/bj/dev/javascript/full-stack/pictogram/src/components/profile/OtherUser.js":"11","/Users/bj/dev/javascript/full-stack/pictogram/src/components/layout/FollowSuggestions.js":"12","/Users/bj/dev/javascript/full-stack/pictogram/src/components/pages/Home.js":"13","/Users/bj/dev/javascript/full-stack/pictogram/src/components/pages/Login.js":"14","/Users/bj/dev/javascript/full-stack/pictogram/src/components/layout/Footer.js":"15","/Users/bj/dev/javascript/full-stack/pictogram/src/components/post/PostList.js":"16","/Users/bj/dev/javascript/full-stack/pictogram/src/context/types.js":"17","/Users/bj/dev/javascript/full-stack/pictogram/src/components/post/Post.js":"18","/Users/bj/dev/javascript/full-stack/pictogram/src/components/post/CreatePost.js":"19","/Users/bj/dev/javascript/full-stack/pictogram/src/components/layout/UserCard.js":"20"},{"size":6135,"mtime":1617029149939,"results":"21","hashOfConfig":"22"},{"size":500,"mtime":1606511076586,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":1606511076588,"results":"24","hashOfConfig":"22"},{"size":5620,"mtime":1617035876867,"results":"25","hashOfConfig":"22"},{"size":1822,"mtime":1617028221246,"results":"26","hashOfConfig":"22"},{"size":5928,"mtime":1616698426994,"results":"27","hashOfConfig":"22"},{"size":5418,"mtime":1616788244677,"results":"28","hashOfConfig":"22"},{"size":150,"mtime":1616681953048,"results":"29","hashOfConfig":"22"},{"size":7515,"mtime":1617027448884,"results":"30","hashOfConfig":"22"},{"size":5014,"mtime":1616788853048,"results":"31","hashOfConfig":"22"},{"size":8856,"mtime":1617033427329,"results":"32","hashOfConfig":"22"},{"size":1330,"mtime":1617044708975,"results":"33","hashOfConfig":"22"},{"size":1214,"mtime":1617046422214,"results":"34","hashOfConfig":"22"},{"size":5304,"mtime":1616772729963,"results":"35","hashOfConfig":"22"},{"size":1717,"mtime":1616768558108,"results":"36","hashOfConfig":"22"},{"size":1525,"mtime":1617031844368,"results":"37","hashOfConfig":"22"},{"size":1073,"mtime":1617029132336,"results":"38","hashOfConfig":"22"},{"size":10467,"mtime":1607892108893,"results":"39","hashOfConfig":"22"},{"size":6067,"mtime":1616768784478,"results":"40","hashOfConfig":"22"},{"size":3709,"mtime":1617047111679,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},"1ealc4k",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96"},"/Users/bj/dev/javascript/full-stack/pictogram/src/context/appContext.js",["97","98","99","100","101"],"import { ContactsOutlined } from '@material-ui/icons';\nimport React, { useReducer, createContext } from 'react';\nimport { SET_USER, SET_USERS, SET_USER_POSTS, SET_POSTS, LOADING_DATA , LOADING_UI, POST_POST, SET_ERRORS, CLEAR_ERRORS, LOADING_USER, LIKE_POST, UNLIKE_POST, SUBMIT_COMMENT, DELETE_POST, DELETE_COMMENT, SET_OTHER_USER, FOLLOW_USER, UNFOLLOW_USER } from './types';\n\nexport const AppContext = createContext();\n\nconst initialState = {\n    users: [],\n    post: {\n        posts: [],\n        post: {},\n        loading: false,\n    },\n    user: {\n        authenticated: false,\n        credentials: {},\n        myPosts: [],\n        likes: [],\n        notifications: []\n    },\n    otherUser: {\n        credentials: {},\n        posts: [],\n    },\n    ui: {\n        loading: false,\n        errors: null\n    }\n}\n\nconst appReducer = (state, action) => {\n    switch (action.type) {\n        case SET_USERS:\n            return {\n                ...state,\n                users: [...action.payload]\n            }\n        case SET_USER:\n            // console.log(action.payload)\n            return {\n                ...state,\n                user: {\n                    ...state.user,\n                    authenticated: true,\n                    credentials: {...action.payload}\n  \n                }\n            }\n        case SET_USER_POSTS:\n            return {\n                ...state,\n                user: {\n                    ...state.user,\n                    myPosts: action.payload\n                }\n            }\n        case SET_OTHER_USER: \n        // console.log(action.payload);\n        // console.log(action.payload.userPosts);\n            return {\n                ...state,\n                otherUser: {\n                    ...state.otherUser,\n                    credentials: {...action.payload.user},\n                    posts: [...action.payload.userPosts]\n                }\n            }\n        case FOLLOW_USER:\n        case UNFOLLOW_USER:\n            // console.log(action.payload)\n            return {\n                ...state,\n                otherUser: {\n                    ...state.otherUser,\n                    credentials: {\n                        ...state.otherUser.credentials,\n                        followers: action.payload.followedUser.followers,\n                        // following: action.payload.foll\n                    }\n                },\n                user: {\n                    ...state.user,\n                    credentials: {\n                        ...state.user.credentials,\n                        following: action.payload.followingUser.following\n                    }\n                }\n            }\n        case LOADING_DATA: \n            return {\n                ...state,\n                post: {\n                    ...state.post,\n                    loading: true\n                }\n            }\n        case LOADING_UI:\n            return {\n                ...state,\n                ui: {\n                    ...state.ui,\n                    loading: true\n                }\n            }\n        case SET_ERRORS:\n            return {\n                ...state,\n                ui: {\n                    ...state.ui,\n                    loading: false,\n                    errors: action.payload\n                }\n            }\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                ui: {\n                    ...state.ui,\n                    loading: false,\n                    errors: null,\n                }\n            }\n        case SET_POSTS:\n            return {\n                ...state,\n                post: {\n                    ...state.post,\n                    posts: action.payload,\n                    loading: false\n                }\n            }\n        case POST_POST:\n            return {\n                ...state,\n                post: {\n                    ...state.post,\n                    posts: [\n                        action.payload,\n                        ...state.post.posts\n                    ]\n                },\n                ui: {\n                    loading: false,\n                }\n            }\n        case LIKE_POST:\n        case UNLIKE_POST: \n            const likeUpdatedPosts = state.post.posts.map(post => {\n                if(post._id == action.payload._id){\n                    return post = action.payload;\n                } else { return post } \n            })\n            return {\n                ...state,\n                post: {\n                    ...state.post,\n                    posts: likeUpdatedPosts\n                }\n            }\n        case SUBMIT_COMMENT:\n            const commentUpdatedPosts = state.post.posts.map(post => {\n                if(post._id == action.payload._id){\n                    return post = action.payload;\n                } else {return post}\n            })\n            return {\n                ...state,\n                post: {\n                    ...state.post,\n                    posts: commentUpdatedPosts\n                }\n            }\n        case DELETE_POST: \n            const deleteUpdatedPosts = state.post.posts.filter(post => post._id !== action.payload._id) \n            return {\n                ...state,\n                post: {\n                    ...state.post,\n                    posts: deleteUpdatedPosts\n                }\n            }\n        case DELETE_COMMENT:\n            console.log(action.payload)\n            const commentDeleteUpdatedPosts = state.post.posts.map(post => {\n                if(post._id == action.payload._id){\n                    return post = action.payload;\n                } else { return post}\n            })\n            return {\n                ...state,\n                post: {\n                    ...state.post,\n                    posts: commentDeleteUpdatedPosts\n                }\n            }\n        default:\n            return state\n    }\n}\n\nexport const AppContextProvider = props => {\n    const [state, dispatch] = useReducer(appReducer, initialState);\n\n    return(\n        <AppContext.Provider value={[state, dispatch]}>\n            {props.children}\n        </AppContext.Provider>\n    )\n}","/Users/bj/dev/javascript/full-stack/pictogram/src/index.js",[],"/Users/bj/dev/javascript/full-stack/pictogram/src/reportWebVitals.js",[],"/Users/bj/dev/javascript/full-stack/pictogram/src/App.js",["102","103"],"import './App.scss';\nimport { useState, useEffect, useCallback } from 'react';\nimport { BrowserRouter as Router, Route, Switch, Redirect, useHistory } from 'react-router-dom';\n// App Context\nimport { AppContextProvider } from './context/appContext';\n// Components\nimport Home from './components/pages/Home';\nimport Login from './components/pages/Login';\nimport SignUp from './components/pages/SignUp';\nimport Footer from './components/layout/Footer';\nimport User from './components/profile/User';\nimport OtherUser from './components/profile/OtherUser';\nimport Navbar from './components/layout/Navbar';\nimport SubscribedUserPosts from './components/pages/SubscribedUserPosts';\nimport EditUser from './components/profile/EditUser';\nimport PostList from './components/post/PostList';\nimport Logout from './components/pages/Logout';\nimport FollowSuggestions from './components/layout/FollowSuggestions';\n\n// MUI \nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport createMuiTheme from '@material-ui/core/styles/createMuiTheme';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      light: \"#B7D4DB\",\n      main: \"#A5CAD2\",\n      dark: '#84A1A8',\n      contrastText: \"#333\"\n    },\n    secondary: {\n      light: \"#FF94A1\",\n      main: \"#FF7A89\",\n      dark: \"#CC616E\",\n      contrastText: \"#333\"\n    }\n  },\n  spacing: [0, 4, 8, 16, 32, 64]\n})\n\nconst Routing = (props) => {\n  const history = useHistory();\n  const { user, getUser, setUser } = props;\n  useEffect(() => {\n    if(user){\n      history.push('/');\n    } else{\n      history.push('/login');\n    }\n  },[user])\n\n  return(\n    <Switch>\n      {/* <Route exact path='/' component={Home} /> */}\n      <Route exact path='/' >\n        <Home user={user} {...props}>\n          <PostList />\n          <FollowSuggestions user={user} />\n        </Home>\n      </Route>\n      {/* <Route exact path='/signup' component={Signup} /> */}\n      <Route exact path='/signup'>\n        <SignUp getUser={getUser} updateUser={setUser} {...props} />\n      </Route>\n      {/* <Route exact path='/login' component={Login} /> */}\n      <Route exact path='/login'> \n        <Login getUser={getUser} {...props} />\n      </Route>\n      <Route exact path='/user' component={User} />\n      <Route exact path='/user/:userId' component={OtherUser} />\n      <Route path='/subscribedPosts' component={SubscribedUserPosts} />\n      <Route exact path='/editProfile' component={EditUser} />\n      <Route path='/logout' component={Logout} />\n    </Switch>\n  )\n}\n\nfunction App() {\n  const [user, setUser] = useState(undefined);\n  // console.log(user)\n\n  // useCallback() Returns a memoized callback.\n\n //Pass an inline callback and an array of dependencies. useCallback will return a memoized version of the callback that only changes if one of the dependencies has changed. This is useful when passing callbacks to optimized child components that rely on reference equality to prevent unnecessary renders (e.g. shouldComponentUpdate).\n\n  // useCallback(fn, deps) is equivalent to useMemo(() => fn, deps).\n  const getUser = useCallback(async function() {\n    try {\n      const response = await fetch('/api/users/me', {\n        headers: {\n          credentials: 'include',\n        },\n      })\n      const json = await response.json();\n      if(!response.ok){\n        throw new Error(json.message);\n      }\n      // console.log(json)\n      setUser(json.data);\n    } catch (err) {\n      setUser(undefined);\n      console.log({ err });\n    }\n  }, [])\n\n  useEffect(() => {\n    getUser();\n  }, [getUser])\n\n  return (\n    <MuiThemeProvider theme={theme}>\n      <AppContextProvider>\n        <Router>\n          <div className=\"app\">\n            {user && <Navbar updateUser={setUser} />}\n            <Routing user={user} setUser={setUser} getUser={getUser} />\n            {/* <div className=\"container\"> */}\n              {/* <Switch> */}\n                {/* <Route exact path='/' component={Home} /> */}\n                {/* <Route exact path='/' \n                  render={ props => {\n                    if(!user){\n                      return <Redirect to='/login' />;\n                    }\n                    return <Home user={user} {...props}>\n                      <PostList />\n                    </Home>\n                  }} \n                /> */}\n                {/* <Route exact path='/signup' component={Signup} /> */}\n                {/* <Route exact path='/signup' \n                  render={ props => {\n                    if(user){\n                      return <Redirect to='/' />;\n                    } \n                    return <SignUp getUser={getUser} updateUser={setUser} {...props} />\n                  }} \n                /> */}\n                {/* <Route exact path='/login' component={Login} /> */}\n                {/* <Route exact path='/login' \n                  render={ props => {\n                    if(user){\n                      return <Redirect to='/' />\n                    }\n                    return <Login getUser={getUser} {...props} />\n                  }} \n                /> */}\n                {/* <Route exact path='/user' component={User} />\n                <Route exact path='/user/:userId' component={OtherUser} />\n                <Route path='/subscribedPosts' component={SubscribedUserPosts} />\n                <Route exact path='/editProfile' component={EditUser} />\n                <Route path='/logout' component={Logout} /> */}\n              {/* </Switch> */}\n            {/* </div> */}\n            {user && <Footer />}\n          </div>\n        </Router>\n      </AppContextProvider>\n    </MuiThemeProvider>\n  );\n}\n\nexport default App;\n","/Users/bj/dev/javascript/full-stack/pictogram/src/components/pages/SubscribedUserPosts.js",["104","105","106","107","108","109","110","111"],"import { Route, Switch } from 'react-router-dom';\nimport { useRouteMatch } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\n\nimport Grid from '@material-ui/core/Grid';\n// components\nimport Post from './../post/Post';\nimport User from './../profile/User';\nimport { SET_USER } from './../../context/types';\nimport { useState, useEffect, useCallback } from 'react';\n\n\nimport { AppContext } from '../../context/appContext';\nimport NavBar from '../layout/Navbar';\n\nconst SubscribedUserPosts = (props) => {\n    // const [state, dispatch] = useContext(AppContext); \n    const [subscribedPosts, setSubscribedPosts] = useState()\n\n    const refresh = useCallback( async() => {\n        // dispatch({ type: LOADING_DATA });\n        try {\n            const response = await fetch('/api/posts/getSubscribedPosts');\n            const postRes = await response.json();\n            // console.log(postRes);\n            setSubscribedPosts(postRes);\n        } catch(err) {\n            console.log(err)\n        }\n    }, []);\n\n    useEffect(() => {\n        refresh(); \n    }, [refresh]);\n\n     const postsMarkup = subscribedPosts ? (\n        subscribedPosts.map(post =>{\n            return <Post key={post._id} post={post} />\n        }\n        )) : (<p>Loading...</p>)\n\n\n    return (\n      // <div className=\"classes root container\">\n        <div className=\"classes root container\">\n          <Grid container spacing={4}>\n              <Grid item sm={1} xs={12}>\n              </Grid>\n              <Grid item sm={7} xs={12}>\n                  <h2>Subscribed Posts</h2>\n                  {postsMarkup}\n              </Grid>\n              <Grid item sm={4} xs={12}>\n                  {/* <h2>Follow..</h2> */}\n              </Grid>\n          </Grid>\n        </div>\n      // </div>\n\n    )\n} \n\n\nexport default SubscribedUserPosts;","/Users/bj/dev/javascript/full-stack/pictogram/src/components/pages/SignUp.js",["112","113","114"],"import React, { useState } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { Link, useHistory } from 'react-router-dom';\n\nimport { AppContext } from '../../context/appContext';\nimport { useContext, useEffect, useCallback } from 'react';\nimport { SET_ERRORS, LOADING_UI, CLEAR_ERRORS } from '../../context/types';\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nconst SignUp = (props) => {\n  const classes = useStyles();\n  const [state, dispatch] = useContext(AppContext); \n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [errors, setErrors] = useState({})\n  console.log(errors);\n  \n  useEffect(() => {\n    if(state.ui.errors){\n      dispatch({ type: CLEAR_ERRORS })\n      setErrors(state.ui.errors)\n    }\n  }, [state.ui.errors])\n\n  \n  async function signUpUser(){\n    // frontend user input(email) validation\n    // if(!regex.test(email)){\n    //  setErrors({ email: \"Invalid email\" })\n    //  return\n    // }\n    try {\n      dispatch({ type: LOADING_UI });\n      const url = `/api/users/`;\n      const method = 'POST';\n      const response = await fetch(url, \n        {\n          method,\n          headers: {\n              'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({ name, email, password })\n      })\n      const data = await response.json();\n      console.log('data', data)\n      if(!response.ok){\n        dispatch({\n          type: SET_ERRORS,\n          payload: data\n        })\n      }\n\n      const loginResponse = await fetch('/api/users/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ email, password })\n      });\n      console.log(loginResponse);\n      // if(!loginResponse.ok){\n      //   throw new Error(data.message);\n      // }\n      props.getUser();\n    } catch(err){\n      console.log(err)\n      props.updateUser(undefined);\n      dispatch({\n        type: SET_ERRORS,\n        payload: err\n      })\n    }\n  }\n  async function handleSubmit(e){\n      // dispatch({ type: LOADING_UI });\n      e.preventDefault();\n      signUpUser();\n  }\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign up\n        </Typography>\n        <form className={classes.form} noValidate onSubmit={handleSubmit}>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"name\"\n                label=\"Name\"\n                name=\"name\"\n                autoComplete=\"lname\"\n                helperText={errors.name} \n                error={errors.name ? true : false}\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n                helperText={errors.email} \n                error={errors.email ? true : false}\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n                helperText={errors.password} \n                error={errors.password ? true : false}\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormControlLabel\n                control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\n                label=\"I want to receive inspiration, marketing promotions and updates via email.\"\n              />\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Sign Up\n          </Button>\n          <p>By signing up, you agree to our Terms , Data Policy and Cookies Policy .</p>\n          <Grid container justify=\"flex-end\">\n            <Grid item>\n              <Link to=\"/login\">\n                Already have an account? Sign in\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n    </Container>\n  );\n}\n\nexport default SignUp;","/Users/bj/dev/javascript/full-stack/pictogram/src/components/layout/Navbar.js",["115","116","117","118","119","120"],"import CreatePost from './../post/CreatePost';\nimport { Link, useHistory } from 'react-router-dom';\nimport { useContext } from 'react';\n\n// MUI\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\nimport InputBase from '@material-ui/core/InputBase';\nimport Badge from '@material-ui/core/Badge';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport { Button } from '@material-ui/core';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport HomeIcon from '@material-ui/icons/Home';\nimport SubscriptionsIcon from '@material-ui/icons/Subscriptions';\nimport LockIcon from '@material-ui/icons/Lock';\nimport { AppContext } from '../../context/appContext';\n\nconst useStyles = makeStyles((theme) => ({\n    navContainer: {\n        width: \"1000px\",\n        display: 'flex',\n        alignItems: \"center\",\n        margin: \"0 auto\"\n    },\n    grow: {\n        flexGrow: 1,\n    },\n    title: {\n        marginLeft: theme.spacing(5),\n        marginRight: theme.spacing(2),\n        fontFamily: 'Pacifico',\n        fontSize: '2rem',\n        },\n    search: {\n        position: 'relative',\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: fade(theme.palette.common.white, 0.15),\n        '&:hover': {\n            backgroundColor: fade(theme.palette.common.white, 0.25),\n        },\n        marginRight: theme.spacing(2),\n        marginLeft: 0,\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n        marginLeft: theme.spacing(5),\n        width: 'auto',\n        },\n    },\n    searchIcon: {\n        padding: theme.spacing(0, 2),\n        height: '100%',\n        position: 'absolute',\n        pointerEvents: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    inputRoot: {\n        color: 'inherit',\n    },\n    inputInput: {\n        padding: theme.spacing(1, 1, 1, 0),\n        // vertical padding + font size from searchIcon\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n        transition: theme.transitions.create('width'),\n        width: '100%',\n        [theme.breakpoints.up('md')]: {\n        width: '20ch',\n        },\n    },\n     sectionDesktop: {\n        display: 'none',\n        [theme.breakpoints.up('md')]: {\n        display: 'flex',\n        },\n    },\n    sectionMobile: {\n        display: 'flex',\n        [theme.breakpoints.up('md')]: {\n        display: 'none',\n        },\n    }\n}))\n\nconst NavBar = (props) => {\n    const classes = useStyles();\n    const history = useHistory();\n    const [ state, dispatch ] = useContext(AppContext);\n\n    async function logout(){\n        try{\n            const response = await fetch('/api/users/logout');\n            const json = await response.json();\n            console.log(json)\n            if(response.ok){\n                props.updateUser(undefined)\n                history.push('/login')\n            }\n        }catch(err){\n            console.log(err)\n        }\n    }\n\n    const { user } = state;\n    const { credentials: {name} } = state.user;\n\n    return (\n        <AppBar>\n            <Toolbar>\n                <div className={classes.navContainer}>\n                        <Link to={user ? \"/\" : \"/login\"}>\n                            <Typography className={classes.title} className=\"brand-logo\" variant=\"h6\" noWrap>Pictogram</Typography>\n                        </Link>\n                    <div className={classes.search}>\n                        <div className={classes.searchIcon}>\n                            <SearchIcon />\n                        </div>\n                        <InputBase placeholder=\"Search...\" classes={{ root: classes.inputRoot, input: classes.inputInput }} inputProps={{ 'aria-label': 'search' }}\n                        />\n                    </div>\n                    <div className={classes.grow} />\n                    <div className={classes.sectionDesktop}>\n                        <Button color=\"inherit\" component={Link} to=\"/\" aria-label=\"home page\">\n                            <HomeIcon />\n                            Home\n                        </Button>\n                        <Button className={classes.subscribedPosts_Btn} component={Link} to=\"/subscribedPosts\" aria-label=\"subscribed posts\">\n                            <SubscriptionsIcon />\n                            Subscribed\n                        </Button>\n                        <CreatePost />\n                        <Button component={Link} to=\"/user\" aria-label=\"user profile page\" style={{ color: '#ee0000'}}>\n                            <AccountCircleIcon />\n                            {name}\n                        </Button>\n                        <Button className={classes.subscribedPosts_Btn} onClick={logout} title=\"Logout\" aria-label=\"log out\">\n                            {/* <Link to=\"/logout\"> */}\n                                <LockIcon />\n                                Log out\n                            {/* </Link> */}\n                        </Button>\n                    </div>\n                </div>\n                \n            </Toolbar>\n        </AppBar>\n    )\n}\n\nexport default NavBar;","/Users/bj/dev/javascript/full-stack/pictogram/src/components/pages/Logout.js",[],"/Users/bj/dev/javascript/full-stack/pictogram/src/components/profile/EditUser.js",["121","122","123","124","125","126","127","128","129","130"],"import Grid from '@material-ui/core/Grid';\nimport { AppContext } from './../../context/appContext';\nimport { useState, useContext, useEffect, useCallback } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport { Link } from 'react-router-dom';\n\nimport { Typography } from '@material-ui/core';\nimport { SET_USER, SET_USER_POSTS } from './../../context/types';\nimport { Button } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n    editProfile: {\n      width: \"100%\",\n      padding: \"1rem\",\n      marginTop: 50\n    },\n    userDetail: {\n      display: \"flex\",\n      alignItems: \"Center\"\n    },\n    label: {\n      width: \"40%\",\n      display: \"flex\",\n      justifyContent: \"flex-end\",\n      paddingRight: 40\n    },\n    formField: {\n      width: \"60%\"\n    },\n    submit: {\n      marginTop: 10,\n      display: \"block\",\n      margin: \"0 auto\"\n    },\n    name: {\n      fontWeight: 'bold'\n    },\n    subtitle: {\n      fontWeight: 'bold'\n    },\n    input: {\n        display: 'none',\n    },\n    button: {\n      border: \"1px solid #84A1A8\"\n    }\n}))\n\nconst EditUser = () => {\n    const classes = useStyles();\n    const [state, dispatch] = useContext(AppContext); \n    const [ websitee, setWebsitee ] = useState('');\n    const [ bioo, setBioo ] = useState('');\n    const [ image, setImage ] = useState('');\n    const [ imgUrl, setImgUrl ] = useState('');\n    \n    const { credentials: {name, imageUrl, bio, website, email, followers, following}, myPosts } = state.user;\n    // console.log(followers, following)\n    \n    useEffect(() => {\n      setImgUrl(imageUrl ? imageUrl : '')\n      setWebsitee(website ? website : '');\n      setBioo(bio ? bio : '')\n    },[])\n\n    async function updatePhoto (file) {\n      setImage(file);\n    }\n\n    useEffect(async() => {\n      if(image){\n        try {\n          const data = new FormData()\n          data.append('file', image);\n          data.append('upload_preset', \"pictogram\");\n          data.append('cloud_name', 'dbagdzszp');\n          const response = await fetch('https://api.cloudinary.com/v1_1/dbagdzszp/image/upload', {\n              method: 'post',\n              body: data\n          })\n          const dataBack = await response.json();\n          if(dataBack){\n              console.log(dataBack);\n              setImgUrl(dataBack.url);\n              console.log(dataBack);\n          }\n        } catch(err){\n            console.log(err);\n        }\n      }\n    }, [image])\n\n    async function handleSubmit(e){\n        e.preventDefault();\n        if(imgUrl){\n        try {\n            const url = `/api/users/user/editProfile`;\n            const method = 'PUT';\n            const response = await fetch(url, {\n                method,\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({ \n                  imageUrl: imgUrl,\n                  website: websitee,\n                  bio: bioo \n                })\n            })\n            const data = await response.json();\n            console.log(data)\n            \n            if(!response.ok) {\n                throw new Error()\n            }\n            if(response.ok){\n               dispatch({\n                  type: SET_USER,\n                  payload: data\n              })\n            }\n        } catch(err){\n            console.log(err)\n        }\n      }\n    }       \n\n    return (\n        // <div className=\"classes root container\">\n            <Grid container spacing={4}>\n                <Grid item sm={2} xs={12}>\n                </Grid>\n                <Grid item sm={8} xs={12} container>\n                    <div className={classes.editProfile}>\n                      <h3>Edit User Profile</h3>\n                      <form className={classes.form} onSubmit={handleSubmit} noValidate>\n                        {/* Image */}\n                        <div className={classes.userDetail}>\n                          <div className={classes.label}>\n                            <img style={{width: '100px', height: '100px', borderRadius: '80px'}} src={imageUrl}/>\n                          </div>\n                          <div className={classes.formField}>\n                            <Typography variant=\"h5\" className={classes.name}>{name}</Typography>\n                            <input\n                                accept=\"image/*\"\n                                className={classes.input}\n                                id=\"raised-button-file\"\n                                multiple\n                                type=\"file\"\n                                // onChange={(e) => setImage(e.target.files[0])}\n                                onChange={(e) => updatePhoto(e.target.files[0])}\n                            />\n                            <label htmlFor=\"raised-button-file\">\n                                <Button raised component=\"span\" \n                                className={classes.button}\n                                >\n                                Change Photo\n                                </Button>\n                            </label>\n                          </div>\n                        </div>\n                        {/* Website */}\n                        <div className={classes.userDetail}>\n                          <div className={classes.label}>\n                            <Typography variant=\"subtitle1\" className={classes.subtitle}>Website</Typography>\n                          </div>\n                          <div className={classes.formField}>\n                            <TextField\n                              variant=\"outlined\" margin=\"normal\" fullWidth id=\"email\" \n                              label=\"Website\" name=\"email\" autoComplete=\"email\" autoFocus\n                              value={websitee} \n                              // helperText={errors.email} error={errors.email ? true : false}\n                              onChange={(e) => { setWebsitee(e.target.value); }}\n                            />\n                          </div>\n                        </div>\n                        {/* Bio */}\n                        <div className={classes.userDetail}>\n                          <div className={classes.label}>\n                            <Typography variant=\"subtitle1\" className={classes.subtitle}>Bio</Typography>\n                          </div>\n                          <div className={classes.formField}>\n                            <TextField variant=\"outlined\" name=\"body\" type=\"text\" label=\"Bio\" multiline rows=\"2\" placeholder=\"Bio\"  \n                            value={bioo} \n                            className=\"textField\" \n                            onChange={(e) => { setBioo(e.target.value)}} \n                            fullWidth />\n                          </div>\n                        </div>\n                        \n                        <Button\n                          type=\"submit\"\n                          // fullWidth\n                          variant=\"contained\"\n                          color=\"primary\"\n                          className={classes.submit}\n                        >\n                          Submit\n                        </Button>\n                      </form>\n                    </div>\n                </Grid>\n                <Grid item sm={2} xs={12}>\n                    {/* <h2>Follows..</h2> */}\n                </Grid>\n            </Grid>\n        // </div>\n    )\n}\n\nexport default EditUser;","/Users/bj/dev/javascript/full-stack/pictogram/src/components/profile/User.js",["131","132","133"],"import Grid from '@material-ui/core/Grid';\nimport { AppContext } from './../../context/appContext';\nimport { useContext, useEffect, useCallback } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\nimport { SET_USER, SET_USER_POSTS } from './../../context/types';\nimport { Button } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\n\nconst useStyles = makeStyles(theme => ({\n    profilePageTop: {\n        display: \"flex\",\n        borderBottom: \"1px solid grey\",\n        width: \"100%\",\n        padding: \"30px 0px\"\n    },\n    name_editProfile: {\n        display: 'flex',\n        justifyContent: 'space-between'\n    },\n    profileImage: {\n        marginRight: '70px',\n        marginLeft: '50px'\n    },\n    profileDetails: {\n        width: '40%'\n    },\n    profileDetailsNumbers: {\n        marginTop: 15,\n        display: \"flex\",\n        justifyContent: 'space-between',\n    },\n    profilePageGallery: {\n        display: 'flex',\n        flexWrap: \"wrap\",\n        justifyContent: 'space-around',\n        padding: \"20px 0px\"\n    },\n    profilePageGalleryImage: {\n        width: \"30%\"\n    },\n    website_bio: {\n        marginTop: 15,\n        paddingLeft: 10\n    },\n    website: {\n        fontWeight: 'bold',\n        color: '#CC616E'\n    }\n}))\n\nconst User = () => {\n    const classes = useStyles();\n    const [state, dispatch] = useContext(AppContext); \n\n    const getMyProfile = useCallback(async function() {\n        try {\n        const response = await fetch('/api/users/user', {\n            headers: {\n                credentials: 'include',\n            },\n        })\n        const json = await response.json();\n        if(!response.ok){\n            throw new Error(json.message);\n        }\n        dispatch({\n            type: SET_USER,\n            payload: json.user\n        })\n        dispatch({\n            type: SET_USER_POSTS,\n            payload: json.userPosts\n        })\n        } catch (err) {\n            console.log({ err });\n        }\n    }, [])\n\n    useEffect(() => {\n        getMyProfile();\n    }, [getMyProfile])\n\n  const { credentials: {name, imageUrl, bio, website, email, followers, following}, myPosts } = state.user;\n  console.log(followers, following)\n\n    return (\n        <div className=\"classes root container\">\n            <Grid container spacing={4}>\n                <Grid item sm={1} xs={12}>\n                </Grid>\n                <Grid item sm={10} xs={12} container>\n                    <div className={classes.profilePageTop}>\n                        <div className={classes.profileImage}>\n                            <img style={{width: '150px', height: '150px', borderRadius: '80px'}} src={imageUrl}/>\n                        </div>  \n                        <div className={classes.profileDetails}>\n                            <div className={classes.name_editProfile}>\n                                <Typography variant=\"h4\">{name}</Typography>\n                                  <Button variant=\"outlined\"color=\"black\"\n                                    component={Link} to=\"/editProfile\"\n                                    >\n                                    Edit profile\n                                  </Button>\n                            </div>\n                        {/* Posts, Followers, Following */}\n                            <div className={classes.profileDetailsNumbers}>\n                                <Typography variant=\"h6\">{myPosts && myPosts.length} posts</Typography>\n                                <Typography variant=\"h6\">{followers && followers.length} followers</Typography>\n                                <Typography variant=\"h6\">{following && following.length} following</Typography>\n                            </div>\n                        {/* Bio & Website */}\n                            <div className={classes.website_bio}>\n                                {bio ? <Typography variant=\"h6\" className={classes.bio}>{bio}</Typography> : null}\n                                {website ? <Typography variant=\"h6\" className={classes.website}><a href={`http://${website}`} target=\"_black\">{website}</a></Typography> : null}\n                            </div>\n                        </div>\n                    </div>\n                    <div className={classes.profilePageBottom}>\n                        <div className={classes.profilePageGallery}>\n                            {myPosts.map(post => (\n                                <div key={post._id} className={classes.profilePageGalleryImage}>\n                                    <img src={post.imageUrl} alt={post.text} />\n                                    <p>{post.text}</p>\n                                </div>\n                            ))}\n                        </div>\n                    </div>\n                </Grid>\n                <Grid item sm={1} xs={12}>\n                    {/* <h2>Follows..</h2> */}\n                </Grid>\n            </Grid>\n        </div>\n    )\n}\n\nexport default User;","/Users/bj/dev/javascript/full-stack/pictogram/src/components/profile/OtherUser.js",["134","135","136","137","138"],"import Grid from '@material-ui/core/Grid';\nimport { AppContext } from './../../context/appContext';\nimport { useState, useContext, useEffect, useCallback } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\nimport { Button } from '@material-ui/core';\n\nimport { SET_OTHER_USER, FOLLOW_USER, UNFOLLOW_USER } from './../../context/types';\n\n\nconst useStyles = makeStyles(theme => ({\n    profilePageTop: {\n        display: \"flex\",\n        borderBottom: \"1px solid grey\",\n        width: \"100%\",\n        padding: \"30px 0px\"\n    },\n    profileImage: {\n        marginRight: '70px',\n        marginLeft: '50px'\n    },\n    profileDetails: {\n        width: '40%'\n    },\n    profileDetailsNumbers: {\n        marginTop: 15,\n        display: \"flex\",\n        justifyContent: 'space-between',\n    },\n    profilePageGallery: {\n        display: 'flex',\n        flexWrap: \"wrap\",\n        justifyContent: 'space-around',\n        padding: \"20px 0px\"\n    },\n    profilePageGalleryImage: {\n        width: \"30%\"\n    },\n    websiteBio_Follow: {\n        display: \"flex\",\n        justifyContent: \"space-between\"\n    },\n    website_bio: {\n        width: '50%',\n        marginTop: 10,\n        marginBottom: 10,\n        paddingLeft: 10\n    },\n    website: {\n        fontWeight: 'bold',\n        color: '#CC616E'\n    },\n    follow_unfollow_Btn: {\n        margin: 'auto'\n    }\n}))\n\nconst OtherUser = () => {\n    const classes = useStyles();\n    const [state, dispatch] = useContext(AppContext); \n    const [otherUser, setOtherUser] = useState(null)\n    const [showFollow, setshowFollow] = useState(true);\n    const { userId } = useParams();\n    // console.log(userId);\n\n    const getUser = useCallback(async function() {\n        try {\n            const response = await fetch(`/api/users/user/${userId}`, {\n                headers: {\n                    credentials: 'include',\n                },\n            })\n            const otherUserDetails = await response.json();\n            // console.log(otherUserDetails)\n            if(!response.ok){\n                throw new Error(otherUserDetails.message);\n            }\n            setOtherUser(otherUserDetails);\n            dispatch({\n                type: SET_OTHER_USER,\n                payload: otherUserDetails\n            })\n            // console.log(state.otherUser);\n            // console.log(state.otherUser.credentials.followers);\n        } catch (err) {\n            console.log({ err });\n        }\n    }, [])\n\n    const followUser = async() => {\n        try {\n            const response = await fetch('/api/users/user/follow', {\n                method: \"put\",\n                headers: {\n                    credentials: 'include',\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({ followId: userId })\n            })\n            const json = await response.json()\n            // console.log(json);\n            if(!response.ok){\n                throw new Error(json.error) \n            }\n            dispatch({\n                type: FOLLOW_USER,\n                payload: json\n            })\n            // setshowFollow(false)\n        } catch(err){\n            console.log(err)\n        }\n    }\n\n    const unfollowUser = async() => {\n        try {\n            const response = await fetch('/api/users/user/unfollow', {\n                method: \"put\",\n                headers: {\n                    credentials: 'include',\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({ unfollowId: userId })\n            })\n            const json = await response.json()\n            console.log(json);\n            if(!response.ok){\n                throw new Error(json.error) \n            }\n            dispatch({\n                type: UNFOLLOW_USER,\n                payload: json\n            })\n            // setshowFollow(true)\n        } catch(err){\n            console.log(err)\n        }\n    }\n\n    useEffect(() => {\n        getUser();\n    }, [getUser])\n\n    // console.log(state.user);\n    // console.log(state.user.credentials.following);\n    console.log('otherUser', otherUser)\n    console.log('state.otherUser', state.otherUser)\n    // console.log(otherUser.user.followers.length)\n    // console.log(otherUser.user.following.length)\n\n    return (\n        <div className=\"classes root container\">\n            <Grid container spacing={4}>\n                <Grid item sm={1} xs={12}>\n                </Grid>\n                <Grid item sm={10} xs={12} container>\n                   {!otherUser ? <h3>Loading...</h3> \n                   :\n                   <>\n                    <div className={classes.profilePageTop}>\n                        <div className={classes.profileImage}>\n                            <img style={{width: '150px', hieght: '150px', borderRadius: '80px'}} src=\"https://images.unsplash.com/photo-1597223557154-721c1cecc4b0?ixid=MXwxMjA3fDB8MHxzZWFyY2h8MjF8fHBlcnNvbnxlbnwwfDJ8MHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60\"/>\n                        </div>  \n                        <div className={classes.profileDetails}>\n                            <Typography variant=\"h4\">{state.otherUser.credentials.name}</Typography>\n                        {/* Posts Followers Following */}\n                            <div className={classes.profileDetailsNumbers}>\n                                <Typography variant=\"h6\">{state.otherUser && state.otherUser.posts.length} posts</Typography>\n                                <Typography variant=\"h6\">{state.otherUser.credentials.followers && state.otherUser.credentials.followers.length} followers</Typography>\n                                <Typography variant=\"h6\">{state.otherUser.credentials.following && state.otherUser.credentials.following.length} following</Typography>\n                            </div>\n                        {/* Bio & Website */}\n                            <div className={classes.websiteBio_Follow}>\n                                <div className={classes.website_bio}>\n                                    {state.otherUser.credentials.bio ? <Typography variant=\"h6\" className={classes.bio}>{state.otherUser.credentials.bio}</Typography> : null}\n                                    {state.otherUser.credentials.website ? <Typography variant=\"h6\" className={classes.website}><a href={`http://${state.otherUser.credentials.website}`} target=\"_black\">{state.otherUser.credentials.website}</a></Typography> : null}\n                                </div>\n                                <div className={classes.follow_unfollow_Btn}>\n                                   {state.user.credentials.following.includes(otherUser.user._id)\n                                //    {state.otherUser.credentials.followers.includes(state.user.credentials._id)\n                                    ? \n                                    <Button\n                                        type=\"submit\"\n                                        variant=\"outlined\"\n                                        color=\"black\"\n                                        className={classes.follow}\n                                        onClick={() => unfollowUser()}\n                                        >\n                                        Unfollow\n                                    </Button>\n                                    : \n                                    <Button\n                                        type=\"submit\"\n                                        variant=\"contained\"\n                                        color=\"primary\"\n                                        className={classes.follow}\n                                        onClick={() => followUser()}\n                                        >\n                                        Follow\n                                    </Button>\n                                }\n                                </div>\n                            </div>\n                                                     \n                        </div>\n                    </div>\n                    <div className={classes.profilePageBottom}>\n                        <div className={classes.profilePageGallery}>\n                            {otherUser.userPosts.map(post => (\n                                <div key={post._id} className={classes.profilePageGalleryImage}>\n                                    <img src={post.imageUrl}/>\n                                </div>\n                            ))}\n                        </div>\n                    </div>\n                   </>\n                    }\n                </Grid>\n                <Grid item sm={1} xs={12}>\n                </Grid>\n            </Grid>\n        </div>\n    )\n}\n\nexport default OtherUser;","/Users/bj/dev/javascript/full-stack/pictogram/src/components/layout/FollowSuggestions.js",["139","140"],"import React from 'react';\nimport UserCard from './UserCard';\nimport { useContext, useEffect, useCallback } from 'react';\nimport { AppContext } from './../../context/appContext';\nimport  { SET_USERS } from './../../context/types';\n\nconst FollowSuggestions = ( props ) => {\n  const [ state, dispatch ] = useContext(AppContext);\n\n  const refresh = useCallback( async() => {\n    // dispatch({ type: LOADING_DATA });\n    try {\n        const response = await fetch('/api/users/');\n        const usersRes = await response.json();\n        // console.log(postRes);\n        dispatch({ type: SET_USERS, payload: usersRes })\n    } catch(err) {\n        console.log(err)\n        dispatch({ type: SET_USERS, payload: [] })\n    }\n  }, []);\n\n  useEffect(() => {\n      refresh(); \n  }, [refresh]);\n\n  let otherUsers =[];\n\n  state.users.map(eachUser => {\n    if(state.user.credentials.following){\n      if(!state.user.credentials.following.includes(eachUser._id)){\n        if(eachUser._id !== state.user.credentials._id){\n          otherUsers.push(eachUser)\n        }\n      };\n    }\n  })\n\nconsole.log(otherUsers);\n\n\n   const usersMarkup = otherUsers.map(user =>{\n        return <UserCard key={user._id} user={user} />\n    }\n    )\n\n  return (\n    <div className=\"classes root\">\n      {usersMarkup}\n    </div>\n  )\n}\n\nexport default FollowSuggestions;","/Users/bj/dev/javascript/full-stack/pictogram/src/components/pages/Home.js",["141","142","143","144","145","146","147","148"],"import { Route, Switch } from 'react-router-dom';\nimport { useRouteMatch } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\n\nimport Grid from '@material-ui/core/Grid';\n// components\nimport PostList from './../post/PostList';\nimport { SET_USER } from './../../context/types';\n\n\nimport { AppContext } from '../../context/appContext';\nimport { useContext, useEffect, useCallback } from 'react';\n\n\n\nconst Home = (props) => {\n    const { user, children } = props;\n    const [state, dispatch] = useContext(AppContext); \n    \n    useEffect(() => {\n        dispatch({ type: SET_USER, payload: props.user })\n    },[user])\n\n    return (\n        <div className=\"classes root container\">\n           {/* {children} */}\n            <Grid container spacing={4}>\n                <Grid item sm={1} xs={12}>\n                </Grid>\n                <Grid item sm={7} xs={12}>\n                    {children[0]}\n                </Grid>\n                <Grid item sm={3} xs={12}>\n                    <h3>You may follow...</h3>\n                    {children[1]}\n                </Grid>\n                <Grid item sm={1} xs={12}>\n                </Grid>\n            </Grid>\n        </div> \n    )\n} \n\n\nexport default Home;","/Users/bj/dev/javascript/full-stack/pictogram/src/components/pages/Login.js",["149","150","151","152"],"import React, { useState } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Link, useHistory } from 'react-router-dom';\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\n\nimport { AppContext } from '../../context/appContext';\nimport { useContext, useEffect, useCallback } from 'react';\nimport { SET_ERRORS, LOADING_UI, CLEAR_ERRORS, SET_USER } from '../../context/types';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100vh',\n  },\n  image: {\n    backgroundImage: 'url(https://source.unsplash.com/random)',\n    backgroundRepeat: 'no-repeat',\n    backgroundColor:\n      theme.palette.type === 'dark' ? theme.palette.grey[900] : theme.palette.grey[50],\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function Login(props) {\n  const classes = useStyles();\n  const [state, dispatch] = useContext(AppContext); \n  const [ email, setEmail ] = useState('');\n  const [ password, setPassword ] = useState('');\n  const [ errors, setErrors ] = useState({});\n  const history = useHistory();\n\n\n  useEffect(() => {\n    if(state.ui.errors){\n      dispatch({ type: CLEAR_ERRORS })\n      setErrors(state.ui.errors)\n    }\n  }, [state.ui.errors])\n\n  async function handleSubmit(e){\n    // dispatch({ type: LOADING_UI });\n    try {\n        e.preventDefault();\n        dispatch({ type: LOADING_UI });\n        const url = `/api/users/login`;\n        const method = 'POST';\n        const response = await fetch(url, {\n            method,\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ email, password })\n        })\n        const data = await response.json();\n        // console.log(data)\n        if(!response.ok){\n          // throw new Error(data)\n          dispatch({\n            type: SET_ERRORS,\n            payload: data\n          })\n        }\n        dispatch({\n          type: SET_USER,\n          payload: data\n        })\n        props.getUser();\n    } catch(err){\n        console.log(err)\n        dispatch({\n          type: SET_ERRORS,\n          payload: err\n        })\n    }\n  }\n\n  return (\n    <Grid container component=\"main\" className={classes.root}>\n      <CssBaseline />\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <LockOpenIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n          {/* { error !== '' && <Typography color=\"error\">{error}</Typography>} */}\n          <form className={classes.form} onSubmit={handleSubmit} noValidate>\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n              value={email}\n              helperText={errors.email} \n              error={errors.email ? true : false}\n              onChange={(e) => { setEmail(e.target.value); }}\n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n              value={password}\n              helperText={errors.password} \n              error={errors.password ? true : false}\n              onChange={(e) => { setPassword(e.target.value); }}\n            />\n            <FormControlLabel\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\n              label=\"Remember me\"\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n            >\n              Sign In\n            </Button>\n            <Grid container>\n              <Grid item>\n                <Link to=\"/signup\">\n                  Don't have an account? Sign Up\n                </Link>\n              </Grid>\n            </Grid>\n          </form>\n        </div>\n      </Grid>\n    </Grid>\n  );\n}","/Users/bj/dev/javascript/full-stack/pictogram/src/components/layout/Footer.js",[],"/Users/bj/dev/javascript/full-stack/pictogram/src/components/post/PostList.js",["153","154","155","156"],"import Grid from '@material-ui/core/Grid';\n// components\nimport Post from './../post/Post'\nimport { LOADING_DATA, SET_POSTS, LOADING_USER, SET_USER } from './../../context/types';\nimport { AppContext } from '../../context/appContext';\nimport { useContext, useEffect, useCallback } from 'react';\n\nconst PostList = (props) => {\n    const [state, dispatch] = useContext(AppContext); \n\n    const refresh = useCallback( async() => {\n        dispatch({ type: LOADING_DATA });\n        try {\n            const response = await fetch('/api/posts');\n            const postRes = await response.json();\n            // console.log(postRes);\n            dispatch({ type: SET_POSTS, payload: postRes })\n        } catch(err) {\n            console.log(err)\n            dispatch({ type: SET_POSTS, payload: [] })\n        }\n    }, []);\n\n    useEffect(() => {\n        refresh(); \n    }, [refresh]);\n\n    const postsMarkup = !state.post.loading ? (\n        state.post.posts.map(post =>{\n            return <Post key={post._id} post={post} />\n        }\n        )) : (<p>Loading...</p>)\n\n    return (\n        <div className=\"classes root\">\n            {/* <Grid container spacing={4}>\n                <Grid item sm={1} xs={12}>\n                </Grid>\n                <Grid item sm={7} xs={12}> */}\n                    {postsMarkup}\n                {/* </Grid>\n                <Grid item sm={4} xs={12}>\n                    {props.children}\n                </Grid>\n            </Grid> */}\n        </div>\n        \n    )\n} \n\n\nexport default PostList;","/Users/bj/dev/javascript/full-stack/pictogram/src/context/types.js",[],"/Users/bj/dev/javascript/full-stack/pictogram/src/components/post/Post.js",["157","158","159","160","161","162","163","164","165","166","167"],"import { Link } from 'react-router-dom';\n\n// MUI Stuff\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport TextField from '@material-ui/core/TextField';\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\n\nimport Input from '@material-ui/core/Input';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport { Button } from '@material-ui/core';\n// Context\nimport { AppContext } from '../../context/appContext';\nimport { useState, useContext, useEffect, useCallback } from 'react';\nimport { LIKE_POST, SUBMIT_COMMENT, UNLIKE_POST, DELETE_POST, DELETE_COMMENT } from './../../context/types';\n\n// Icons\nimport ChatIcon from '@material-ui/icons/Chat';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        maxWidth: 550,\n        marginBottom: 20,\n        border: '1px solid #B7D4DB',\n        boxShadow: '5px 5px #B7D4DB',\n        position: 'relative'\n    },\n    media: {\n        height: 0,\n        paddingTop: '56.25%', // 16:9\n    },\n    expand: {\n        transform: 'rotate(0deg)',\n        marginLeft: 'auto',\n        transition: theme.transitions.create('transform', {\n        duration: theme.transitions.duration.shortest,\n        }),\n    },\n    expandOpen: {\n        transform: 'rotate(180deg)',\n    },\n    avatar: {\n        backgroundColor: '#FF7A89',\n        fontSize: 20\n    },\n    authorName: {\n        marginLeft: '20px !important',\n        fontWeight: \"bold\",\n        fontSize: '1.3rem',\n        // color: '#CC616E'\n    },\n    postDelete: {\n        position: \"absolute\",\n        right: '10px'\n    },\n    comments: {\n        width: '95%',\n        padding: '0 20px',\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: \"center\",\n        margin: \"0 0\"\n    },\n    commentSection: {\n        display: \"flex\"\n    },\n    form: {\n        // width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    commentName: {\n        color: \"#CC616E\",\n        fontWeight: 'bold',\n        marginRight: 10\n    },\n    commentDelete: {\n        padding: 0\n    },\n    likeBtn: {\n        padding: 0\n    },\n    commentBtn: {\n        padding: 0,\n        marginLeft: 20\n    }\n}))\n\nconst Post = (props) => {\n    const [state, dispatch] = useContext(AppContext); \n    const { _id, text, author, imageUrl, likes, comments } = props.post\n    // console.log(props.post)\n    const classes = useStyles();\n    const [comment, setComment] = useState('');\n\n    const likePost = async(id) => {\n        try {\n            const response = await fetch('/api/posts/like', {\n                method: \"put\",\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    postId: id\n                })\n            })\n            const data = await response.json();\n            // console.log(data)\n            dispatch({\n                type: LIKE_POST,\n                payload: data\n            })\n\n        } catch (err){\n            console.log(err);\n        }\n    }\n\n    const unlikePost = async(id) => {\n        try {\n            const response = await fetch('/api/posts/unlike', {\n                method: \"put\",\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    postId: id\n                })\n            })\n            const data = await response.json();\n            console.log(data)\n            dispatch({\n                type: UNLIKE_POST,\n                payload: data\n            })\n        } catch (err){\n            console.log(err);\n        }\n    }\n\n    const makeComment  = async(text, postId) => {\n        try {\n            const response = await fetch('/api/posts/comment', {\n                method: 'put',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    postId,\n                    text\n                })\n            })\n            const data = await response.json();\n            if(data){\n                console.log(data)\n                dispatch({\n                    type: SUBMIT_COMMENT,\n                    payload: data\n                })\n                setComment('')\n            }\n        } catch(err) {\n            console.log(err);\n        }\n    }\n    const deletePost = async (postId) => {\n        try {\n            const response = await fetch(`/api/posts/deletePost/${postId}`, {\n                method: 'delete',\n                headers: {\n                    credentials: 'include',\n                }\n            })\n            const result = await response.json();\n            console.log(result);\n            if(result){\n                dispatch({\n                    type: DELETE_POST,\n                    payload: result\n                })\n            }\n        } catch (err) {\n            console.log(err)\n        }\n    }\n    const deleteComment = async (postId, commentId) => {\n        console.log(postId, commentId);\n        try {\n            const response = await fetch(`/api/posts/deleteComment/${postId}/${commentId}`, {\n                method: 'delete',\n                headers: {\n                    credentials: 'include',\n                }\n            })\n            const result = await response.json();\n            console.log(result);\n            if(result){\n                dispatch({\n                    type: DELETE_COMMENT,\n                    payload: result\n                })\n            }\n        } catch (err) {\n            console.log(err)\n        }\n    }\n    const handleSubmit = async(e) => {\n        try {\n            e.preventDefault();\n            console.log(comment);\n            makeComment(comment, _id);\n        } catch(err){\n            console.log(err);\n        }\n    }\n    return (\n         <Card className={classes.root} key={_id}>\n            <CardActions>\n                <Avatar aria-label=\"recipe\" className={classes.avatar}>\n                    <div className={classes.profileImage}>\n                        <img style={{width: '50px', height: '50px', borderRadius: '25px'}} src={author.imageUrl}/>\n                    </div>\n                </Avatar>\n                <Typography className={classes.authorName} component={Link} to={author._id !== state.user.credentials._id ? `/user/${author._id}` : `/user` }>\n                        {author.name}\n                </Typography>\n                {author._id == state.user.credentials._id && \n                    <IconButton aria-label=\"settings\" className={classes.postDelete}>\n                        <DeleteOutlineIcon  onClick={() => {deletePost(_id)}} />\n                    </IconButton>\n                }\n            </CardActions>\n            <CardMedia\n                className={classes.media}\n                image={imageUrl}\n                title=\"Paella dish\"\n            />\n            <CardContent>\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                {text}\n                </Typography>\n            </CardContent>\n            <CardActions disableSpacing>\n                {likes.includes(state.user.credentials._id)\n                ? <IconButton aria-label=\"add to favorites\" className={classes.likeBtn}>\n                    <FavoriteIcon style={{ color: '#FF7A89', fontSize: 28 }} onClick={() => {unlikePost(_id)}} />\n                  </IconButton>\n                : <IconButton aria-label=\"add to favorites\" className={classes.likeBtn}>\n                    <FavoriteIcon style={{ color: 'grey', fontSize: 28 }} onClick={() => {likePost(_id)}} />\n                  </IconButton>\n                }\n                 <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                    {likes.length} likes\n                </Typography>\n                <IconButton aria-label=\"add to favorites\" className={classes.commentBtn}>\n                    <ChatIcon />\n                </IconButton>\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                    {comments.length} comments\n                </Typography>\n            </CardActions>\n            {\n                comments.map(record => {\n                    // console.log(record.postedBy._id, state.user.credentials._id);\n                    return (\n                        <div className={classes.comments} key={record._id}>\n                            <Typography variant=\"body1\"><span className={classes.commentName}>{record.postedBy.name}</span>{record.text}</Typography>\n                            {record.postedBy._id == state.user.credentials._id && \n                                <IconButton aria-label=\"settings\" className={classes.commentDelete}>\n                                    <DeleteOutlineIcon onClick={() => deleteComment(_id, record._id)} />\n                                </IconButton>\n                            }\n                        </div>\n                    )\n                })\n            }\n          <form className={classes.form} onSubmit={handleSubmit} noValidate>\n            <div className={classes.commentSection}>\n                <TextField\n                    variant=\"outlined\"\n                    fullWidth\n                    id=\"comment\"\n                    label=\"Add a comment... \"\n                    name=\"name\"\n                    autoComplete=\"lname\"\n                    value={comment}\n                    onChange={(e) => setComment(e.target.value)}\n                />\n                <Button\n                    type=\"submit\"\n                    variant=\"contained\"\n                    color=\"primary\"\n                    //   className={classes.submit}\n                    >\n                    Submit\n                </Button>\n            </div>\n        </form>\n            \n        </Card>\n    )\n}\n\nexport default Post;","/Users/bj/dev/javascript/full-stack/pictogram/src/components/post/CreatePost.js",["168","169","170","171","172","173","174","175"],"import { Fragment, useState } from 'react';\nimport { useHistory } from \"react-router-dom\";\n// MUI stuff\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\n\n//\nimport CloseIcon from '@material-ui/icons/Close';\nimport { SET_ERRORS, LOADING_UI, POST_POST, CLEAR_ERRORS, LOADING_DATA } from '../../context/types';\nimport { AppContext } from '../../context/appContext';\nimport { useContext, useEffect, useCallback } from 'react';\n\nconst useStyles = makeStyles((theme) => ({\n    button: {\n        margin: theme.spacing.unit,\n    },\n    input: {\n        display: 'none',\n    }\n}))\nconst CreatePost = () => {\n    let history = useHistory();\n    const classes = useStyles();\n    const [state, dispatch] = useContext(AppContext); \n    const [ open, setOpen ] = useState(false);\n    const [ text, setText ] = useState('');\n    const [ image, setImage ] = useState('');\n    const [ imageUrl, setImageUrl ] = useState('');\n    const [ errors, setErrors ] = useState({});\n\n    function handleOpen() { \n        setOpen(true) \n    }\n    function handleClose() { \n        setOpen(false) \n        setErrors({})\n    }\n    function handleChange(e) {\n        setText(e.target.value)\n    }\n\n    async function handleSubmit(e){\n        e.preventDefault();\n        try {\n            const data = new FormData()\n            data.append('file', image);\n            data.append('upload_preset', \"pictogram\");\n            data.append('cloud_name', 'dbagdzszp');\n            const response = await fetch('https://api.cloudinary.com/v1_1/dbagdzszp/image/upload', {\n                method: 'post',\n                body: data\n            })\n            const dataBack = await response.json();\n            if(dataBack){\n                // console.log(dataBack);\n                setImageUrl(dataBack.url);\n            }\n        } catch(err){\n            console.log(err);\n        }\n    }\n\n    useEffect(async() => {\n        if(imageUrl){\n            dispatch({ type: LOADING_UI });\n            try {\n                const url = `/api/posts/`;\n                const method = 'POST';\n                console.log(text)\n                const response = await fetch(url, {\n                    method,\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                    body: JSON.stringify({ text, imageUrl })\n                })\n                setText('')\n                const data = await response.json();\n                // console.log(data)\n                \n                // dispatch(clearErrors())\n                if(!response.ok) {\n                    dispatch({\n                        type: SET_ERRORS,\n                        payload: data\n                    })\n                    dispatch({ type: CLEAR_ERRORS })\n                }\n                if(response.ok){\n                    dispatch({\n                        type: POST_POST,\n                        payload: data\n                    })\n                    handleClose();\n                    history.push('/');\n                }\n            } catch(err){\n                // console.log(err)\n                dispatch({\n                    type: SET_ERRORS,\n                    payload: err\n                })\n                setErrors()\n            }\n        }\n    }, [imageUrl])\n    // console.log(state.ui.loading);\n    return (\n        <Fragment>\n            <Button onClick={handleOpen}>\n                <AddCircleIcon />\n                Post\n            </Button>\n            <Dialog open={open} onClose={handleClose} fullWidth maxWidth='sm' className=\"postBabbleDialogBox\" >\n                <div className=\"closePostBabbleBtn\">\n                    <Button onClick={handleClose} style={{ float: \"right\"}}>\n                        <CloseIcon />\n                    </Button>\n                </div>\n                <DialogTitle>Post a new thought</DialogTitle>\n                <DialogContent>\n                    <form onSubmit={handleSubmit}>\n                        <TextField name=\"body\" type=\"text\" label=\"Post...\" multiline rows=\"3\" placeholder=\"Share with your friends...\"  value={text} className=\"textField\" onChange={handleChange} fullWidth  \n                        style={{ marginBottom:\"5px\"}}\n                        />\n                        <Button type=\"submit\" variant=\"contained\" color=\"primary\" \n                        // disabled={state.ui.loading} \n                        // onClick={(e) => postDetails(e)}\n                        style={{ float: \"right\", marginLeft: 5, backgroundColor: \"#A5CAD2\"}}\n                        >Submit\n                            {/* {state.ui.loading && (\n                                <CircularProgress size={30} className=\"progressSpinner\" />\n                            )} */}\n                        </Button>\n                        <input\n                            accept=\"image/*\"\n                            className={classes.input}\n                            id=\"raised-button-file\"\n                            multiple\n                            type=\"file\"\n                            onChange={(e) => setImage(e.target.files[0])}\n                        />\n                        <label htmlFor=\"raised-button-file\">\n                            <Button raised component=\"span\" \n                            className={classes.button} style={{ float: \"right\", backgroundColor: \"lightgrey\"}}\n                            >\n                            Upload\n                            </Button>\n                        </label>\n                        \n                    </form>\n                </DialogContent>\n            </Dialog>\n        </Fragment>\n    )\n}\n\nexport default CreatePost;\n","/Users/bj/dev/javascript/full-stack/pictogram/src/components/layout/UserCard.js",["176","177","178","179","180","181","182","183","184","185","186","187","188","189","190","191","192","193","194","195","196","197","198","199","200"],"import { Link } from 'react-router-dom';\n\n// MUI Stuff\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport TextField from '@material-ui/core/TextField';\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\n\nimport Input from '@material-ui/core/Input';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport { Button } from '@material-ui/core';\n// Context\nimport { AppContext } from '../../context/appContext';\nimport { useState, useContext, useEffect, useCallback } from 'react';\nimport { LIKE_POST, SUBMIT_COMMENT, UNLIKE_POST, DELETE_POST, DELETE_COMMENT } from '../../context/types';\n\n// Icons\nimport ChatIcon from '@material-ui/icons/Chat';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        maxWidth: 550,\n        marginBottom: 20,\n        border: '1px solid #B7D4DB',\n        boxShadow: '5px 5px #B7D4DB',\n        position: 'relative'\n    },\n    media: {\n        height: 0,\n        paddingTop: '56.25%', // 16:9\n    },\n    expand: {\n        transform: 'rotate(0deg)',\n        marginLeft: 'auto',\n        transition: theme.transitions.create('transform', {\n        duration: theme.transitions.duration.shortest,\n        }),\n    },\n    expandOpen: {\n        transform: 'rotate(180deg)',\n    },\n    avatar: {\n        backgroundColor: '#FF7A89',\n        fontSize: 14\n    },\n    authorName: {\n        marginLeft: '10px !important',\n        fontWeight: \"bold\",\n        fontSize: '.9rem',\n        // color: '#CC616E'\n    }\n}))\n\nconst UserCard = (props) => {\n    const [state, dispatch] = useContext(AppContext); \n    const { _id, name, imageUrl } = props.user\n    // console.log(props.post)\n    const classes = useStyles();\n    const [comment, setComment] = useState('');\n\n    return (\n         <Card className={classes.root} key={_id}>\n            <CardActions className=\"userCard\">\n                <Avatar aria-label=\"recipe\" className={classes.avatar}>\n                    <div className={classes.profileImage}>\n                        <img style={{width: '50px', height: '50px', borderRadius: '25px'}} \n                        src={imageUrl}\n                        />\n                    </div>\n                </Avatar>\n                <Typography className={classes.authorName} component={Link} \n                to={_id !== state.user.credentials._id ? `/user/${_id}` : `/user` }\n                >\n                        {name}\n                </Typography>\n                    <Link \n                        to={`/user/${_id}`}\n                        style={{ \n                            color: 'rgb(255, 122, 137)',\n                            fontWeight: 'bold',\n                            float: 'right', \n                            padding: '3px 5px', \n                            // marginLeft: '50px',\n                            border: '1px solid rgb(255, 122, 137)',\n                            borderRadius: '3px',\n                        }}\n                    >\n                        Go\n                    </Link>\n                {/* </Button> */}\n            </CardActions>\n        </Card>\n    )\n}\n\nexport default UserCard;",{"ruleId":"201","severity":1,"message":"202","line":1,"column":10,"nodeType":"203","messageId":"204","endLine":1,"endColumn":26},{"ruleId":"201","severity":1,"message":"205","line":3,"column":122,"nodeType":"203","messageId":"204","endLine":3,"endColumn":134},{"ruleId":"206","severity":1,"message":"207","line":149,"column":29,"nodeType":"208","messageId":"209","endLine":149,"endColumn":31},{"ruleId":"206","severity":1,"message":"207","line":162,"column":29,"nodeType":"208","messageId":"209","endLine":162,"endColumn":31},{"ruleId":"206","severity":1,"message":"207","line":185,"column":29,"nodeType":"208","messageId":"209","endLine":185,"endColumn":31},{"ruleId":"201","severity":1,"message":"210","line":3,"column":50,"nodeType":"203","messageId":"204","endLine":3,"endColumn":58},{"ruleId":"211","severity":1,"message":"212","line":51,"column":5,"nodeType":"213","endLine":51,"endColumn":11,"suggestions":"214"},{"ruleId":"201","severity":1,"message":"215","line":1,"column":10,"nodeType":"203","messageId":"204","endLine":1,"endColumn":15},{"ruleId":"201","severity":1,"message":"216","line":1,"column":17,"nodeType":"203","messageId":"204","endLine":1,"endColumn":23},{"ruleId":"201","severity":1,"message":"217","line":2,"column":10,"nodeType":"203","messageId":"204","endLine":2,"endColumn":23},{"ruleId":"201","severity":1,"message":"218","line":3,"column":10,"nodeType":"203","messageId":"204","endLine":3,"endColumn":14},{"ruleId":"201","severity":1,"message":"219","line":8,"column":8,"nodeType":"203","messageId":"204","endLine":8,"endColumn":12},{"ruleId":"201","severity":1,"message":"220","line":9,"column":10,"nodeType":"203","messageId":"204","endLine":9,"endColumn":18},{"ruleId":"201","severity":1,"message":"221","line":13,"column":10,"nodeType":"203","messageId":"204","endLine":13,"endColumn":20},{"ruleId":"201","severity":1,"message":"222","line":14,"column":8,"nodeType":"203","messageId":"204","endLine":14,"endColumn":14},{"ruleId":"201","severity":1,"message":"223","line":13,"column":16,"nodeType":"203","messageId":"204","endLine":13,"endColumn":26},{"ruleId":"201","severity":1,"message":"224","line":16,"column":33,"nodeType":"203","messageId":"204","endLine":16,"endColumn":44},{"ruleId":"211","severity":1,"message":"225","line":53,"column":6,"nodeType":"213","endLine":53,"endColumn":23,"suggestions":"226"},{"ruleId":"201","severity":1,"message":"227","line":9,"column":8,"nodeType":"203","messageId":"204","endLine":9,"endColumn":18},{"ruleId":"201","severity":1,"message":"228","line":12,"column":8,"nodeType":"203","messageId":"204","endLine":12,"endColumn":13},{"ruleId":"201","severity":1,"message":"229","line":14,"column":8,"nodeType":"203","messageId":"204","endLine":14,"endColumn":20},{"ruleId":"201","severity":1,"message":"230","line":15,"column":8,"nodeType":"203","messageId":"204","endLine":15,"endColumn":25},{"ruleId":"201","severity":1,"message":"231","line":93,"column":20,"nodeType":"203","messageId":"204","endLine":93,"endColumn":28},{"ruleId":"232","severity":1,"message":"233","line":117,"column":67,"nodeType":"234","messageId":"235","endLine":117,"endColumn":89},{"ruleId":"201","severity":1,"message":"224","line":3,"column":43,"nodeType":"203","messageId":"204","endLine":3,"endColumn":54},{"ruleId":"201","severity":1,"message":"218","line":6,"column":10,"nodeType":"203","messageId":"204","endLine":6,"endColumn":14},{"ruleId":"201","severity":1,"message":"236","line":9,"column":20,"nodeType":"203","messageId":"204","endLine":9,"endColumn":34},{"ruleId":"201","severity":1,"message":"237","line":58,"column":57,"nodeType":"203","messageId":"204","endLine":58,"endColumn":62},{"ruleId":"201","severity":1,"message":"238","line":58,"column":64,"nodeType":"203","messageId":"204","endLine":58,"endColumn":73},{"ruleId":"201","severity":1,"message":"239","line":58,"column":75,"nodeType":"203","messageId":"204","endLine":58,"endColumn":84},{"ruleId":"201","severity":1,"message":"240","line":58,"column":87,"nodeType":"203","messageId":"204","endLine":58,"endColumn":94},{"ruleId":"211","severity":1,"message":"241","line":65,"column":7,"nodeType":"213","endLine":65,"endColumn":9,"suggestions":"242"},{"ruleId":"211","severity":1,"message":"243","line":71,"column":15,"nodeType":"244","endLine":92,"endColumn":6},{"ruleId":"245","severity":1,"message":"246","line":141,"column":29,"nodeType":"247","endLine":141,"endColumn":114},{"ruleId":"211","severity":1,"message":"248","line":78,"column":8,"nodeType":"213","endLine":78,"endColumn":10,"suggestions":"249"},{"ruleId":"201","severity":1,"message":"237","line":84,"column":55,"nodeType":"203","messageId":"204","endLine":84,"endColumn":60},{"ruleId":"245","severity":1,"message":"246","line":95,"column":29,"nodeType":"247","endLine":95,"endColumn":114},{"ruleId":"201","severity":1,"message":"250","line":63,"column":12,"nodeType":"203","messageId":"204","endLine":63,"endColumn":22},{"ruleId":"201","severity":1,"message":"251","line":63,"column":24,"nodeType":"203","messageId":"204","endLine":63,"endColumn":37},{"ruleId":"211","severity":1,"message":"252","line":89,"column":8,"nodeType":"213","endLine":89,"endColumn":10,"suggestions":"253"},{"ruleId":"245","severity":1,"message":"246","line":163,"column":29,"nodeType":"247","endLine":163,"endColumn":273},{"ruleId":"245","severity":1,"message":"246","line":212,"column":37,"nodeType":"247","endLine":212,"endColumn":63},{"ruleId":"211","severity":1,"message":"248","line":21,"column":6,"nodeType":"213","endLine":21,"endColumn":8,"suggestions":"254"},{"ruleId":"255","severity":1,"message":"256","line":29,"column":28,"nodeType":"244","messageId":"257","endLine":29,"endColumn":30},{"ruleId":"201","severity":1,"message":"215","line":1,"column":10,"nodeType":"203","messageId":"204","endLine":1,"endColumn":15},{"ruleId":"201","severity":1,"message":"216","line":1,"column":17,"nodeType":"203","messageId":"204","endLine":1,"endColumn":23},{"ruleId":"201","severity":1,"message":"217","line":2,"column":10,"nodeType":"203","messageId":"204","endLine":2,"endColumn":23},{"ruleId":"201","severity":1,"message":"218","line":3,"column":10,"nodeType":"203","messageId":"204","endLine":3,"endColumn":14},{"ruleId":"201","severity":1,"message":"258","line":7,"column":8,"nodeType":"203","messageId":"204","endLine":7,"endColumn":16},{"ruleId":"201","severity":1,"message":"224","line":12,"column":33,"nodeType":"203","messageId":"204","endLine":12,"endColumn":44},{"ruleId":"201","severity":1,"message":"259","line":18,"column":12,"nodeType":"203","messageId":"204","endLine":18,"endColumn":17},{"ruleId":"211","severity":1,"message":"260","line":22,"column":7,"nodeType":"213","endLine":22,"endColumn":13,"suggestions":"261"},{"ruleId":"201","severity":1,"message":"262","line":10,"column":8,"nodeType":"203","messageId":"204","endLine":10,"endColumn":24},{"ruleId":"201","severity":1,"message":"224","line":17,"column":33,"nodeType":"203","messageId":"204","endLine":17,"endColumn":44},{"ruleId":"201","severity":1,"message":"263","line":57,"column":9,"nodeType":"203","messageId":"204","endLine":57,"endColumn":16},{"ruleId":"211","severity":1,"message":"225","line":65,"column":6,"nodeType":"213","endLine":65,"endColumn":23,"suggestions":"264"},{"ruleId":"201","severity":1,"message":"265","line":1,"column":8,"nodeType":"203","messageId":"204","endLine":1,"endColumn":12},{"ruleId":"201","severity":1,"message":"205","line":4,"column":35,"nodeType":"203","messageId":"204","endLine":4,"endColumn":47},{"ruleId":"201","severity":1,"message":"220","line":4,"column":49,"nodeType":"203","messageId":"204","endLine":4,"endColumn":57},{"ruleId":"211","severity":1,"message":"248","line":22,"column":8,"nodeType":"213","endLine":22,"endColumn":10,"suggestions":"266"},{"ruleId":"201","severity":1,"message":"267","line":5,"column":8,"nodeType":"203","messageId":"204","endLine":5,"endColumn":18},{"ruleId":"201","severity":1,"message":"268","line":13,"column":8,"nodeType":"203","messageId":"204","endLine":13,"endColumn":26},{"ruleId":"201","severity":1,"message":"269","line":14,"column":8,"nodeType":"203","messageId":"204","endLine":14,"endColumn":22},{"ruleId":"201","severity":1,"message":"270","line":15,"column":8,"nodeType":"203","messageId":"204","endLine":15,"endColumn":21},{"ruleId":"201","severity":1,"message":"271","line":19,"column":8,"nodeType":"203","messageId":"204","endLine":19,"endColumn":13},{"ruleId":"201","severity":1,"message":"272","line":20,"column":10,"nodeType":"203","messageId":"204","endLine":20,"endColumn":14},{"ruleId":"201","severity":1,"message":"273","line":24,"column":32,"nodeType":"203","messageId":"204","endLine":24,"endColumn":41},{"ruleId":"201","severity":1,"message":"224","line":24,"column":43,"nodeType":"203","messageId":"204","endLine":24,"endColumn":54},{"ruleId":"245","severity":1,"message":"246","line":230,"column":25,"nodeType":"247","endLine":230,"endColumn":115},{"ruleId":"206","severity":1,"message":"207","line":236,"column":29,"nodeType":"208","messageId":"209","endLine":236,"endColumn":31},{"ruleId":"206","severity":1,"message":"207","line":277,"column":50,"nodeType":"208","messageId":"209","endLine":277,"endColumn":52},{"ruleId":"201","severity":1,"message":"274","line":9,"column":8,"nodeType":"203","messageId":"204","endLine":9,"endColumn":24},{"ruleId":"201","severity":1,"message":"272","line":10,"column":10,"nodeType":"203","messageId":"204","endLine":10,"endColumn":14},{"ruleId":"201","severity":1,"message":"275","line":15,"column":59,"nodeType":"203","messageId":"204","endLine":15,"endColumn":71},{"ruleId":"201","severity":1,"message":"224","line":17,"column":33,"nodeType":"203","messageId":"204","endLine":17,"endColumn":44},{"ruleId":"201","severity":1,"message":"259","line":30,"column":12,"nodeType":"203","messageId":"204","endLine":30,"endColumn":17},{"ruleId":"201","severity":1,"message":"276","line":35,"column":13,"nodeType":"203","messageId":"204","endLine":35,"endColumn":19},{"ruleId":"211","severity":1,"message":"243","line":69,"column":15,"nodeType":"244","endLine":112,"endColumn":6},{"ruleId":"211","severity":1,"message":"277","line":112,"column":8,"nodeType":"213","endLine":112,"endColumn":18,"suggestions":"278"},{"ruleId":"201","severity":1,"message":"267","line":5,"column":8,"nodeType":"203","messageId":"204","endLine":5,"endColumn":18},{"ruleId":"201","severity":1,"message":"279","line":7,"column":8,"nodeType":"203","messageId":"204","endLine":7,"endColumn":19},{"ruleId":"201","severity":1,"message":"280","line":8,"column":8,"nodeType":"203","messageId":"204","endLine":8,"endColumn":17},{"ruleId":"201","severity":1,"message":"227","line":11,"column":8,"nodeType":"203","messageId":"204","endLine":11,"endColumn":18},{"ruleId":"201","severity":1,"message":"281","line":12,"column":8,"nodeType":"203","messageId":"204","endLine":12,"endColumn":20},{"ruleId":"201","severity":1,"message":"268","line":13,"column":8,"nodeType":"203","messageId":"204","endLine":13,"endColumn":26},{"ruleId":"201","severity":1,"message":"269","line":14,"column":8,"nodeType":"203","messageId":"204","endLine":14,"endColumn":22},{"ruleId":"201","severity":1,"message":"270","line":15,"column":8,"nodeType":"203","messageId":"204","endLine":15,"endColumn":21},{"ruleId":"201","severity":1,"message":"282","line":16,"column":8,"nodeType":"203","messageId":"204","endLine":16,"endColumn":17},{"ruleId":"201","severity":1,"message":"283","line":17,"column":8,"nodeType":"203","messageId":"204","endLine":17,"endColumn":25},{"ruleId":"201","severity":1,"message":"271","line":19,"column":8,"nodeType":"203","messageId":"204","endLine":19,"endColumn":13},{"ruleId":"201","severity":1,"message":"272","line":20,"column":10,"nodeType":"203","messageId":"204","endLine":20,"endColumn":14},{"ruleId":"201","severity":1,"message":"284","line":21,"column":10,"nodeType":"203","messageId":"204","endLine":21,"endColumn":16},{"ruleId":"201","severity":1,"message":"273","line":24,"column":32,"nodeType":"203","messageId":"204","endLine":24,"endColumn":41},{"ruleId":"201","severity":1,"message":"224","line":24,"column":43,"nodeType":"203","messageId":"204","endLine":24,"endColumn":54},{"ruleId":"201","severity":1,"message":"285","line":25,"column":10,"nodeType":"203","messageId":"204","endLine":25,"endColumn":19},{"ruleId":"201","severity":1,"message":"286","line":25,"column":21,"nodeType":"203","messageId":"204","endLine":25,"endColumn":35},{"ruleId":"201","severity":1,"message":"287","line":25,"column":37,"nodeType":"203","messageId":"204","endLine":25,"endColumn":48},{"ruleId":"201","severity":1,"message":"288","line":25,"column":50,"nodeType":"203","messageId":"204","endLine":25,"endColumn":61},{"ruleId":"201","severity":1,"message":"289","line":25,"column":63,"nodeType":"203","messageId":"204","endLine":25,"endColumn":77},{"ruleId":"201","severity":1,"message":"290","line":28,"column":8,"nodeType":"203","messageId":"204","endLine":28,"endColumn":16},{"ruleId":"201","severity":1,"message":"231","line":65,"column":19,"nodeType":"203","messageId":"204","endLine":65,"endColumn":27},{"ruleId":"201","severity":1,"message":"291","line":69,"column":12,"nodeType":"203","messageId":"204","endLine":69,"endColumn":19},{"ruleId":"201","severity":1,"message":"292","line":69,"column":21,"nodeType":"203","messageId":"204","endLine":69,"endColumn":31},{"ruleId":"245","severity":1,"message":"246","line":76,"column":25,"nodeType":"247","endLine":78,"endColumn":27},"no-unused-vars","'ContactsOutlined' is defined but never used.","Identifier","unusedVar","'LOADING_USER' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Redirect' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["293"],"'Route' is defined but never used.","'Switch' is defined but never used.","'useRouteMatch' is defined but never used.","'Link' is defined but never used.","'User' is defined but never used.","'SET_USER' is defined but never used.","'AppContext' is defined but never used.","'NavBar' is defined but never used.","'useHistory' is defined but never used.","'useCallback' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["294"],"'IconButton' is defined but never used.","'Badge' is defined but never used.","'MoreVertIcon' is defined but never used.","'NotificationsIcon' is defined but never used.","'dispatch' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'SET_USER_POSTS' is defined but never used.","'email' is assigned a value but never used.","'followers' is assigned a value but never used.","'following' is assigned a value but never used.","'myPosts' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'bio', 'imageUrl', and 'website'. Either include them or remove the dependency array.",["295"],"Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["296"],"'showFollow' is assigned a value but never used.","'setshowFollow' is assigned a value but never used.","React Hook useCallback has missing dependencies: 'dispatch' and 'userId'. Either include them or remove the dependency array.",["297"],["298"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside","'PostList' is defined but never used.","'state' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'props.user'. Either include them or remove the dependency array.",["299"],"'LockOutlinedIcon' is defined but never used.","'history' is assigned a value but never used.",["300"],"'Grid' is defined but never used.",["301"],"'CardHeader' is defined but never used.","'FavoriteBorderIcon' is defined but never used.","'ExpandMoreIcon' is defined but never used.","'MoreHorizIcon' is defined but never used.","'Input' is defined but never used.","'fade' is defined but never used.","'useEffect' is defined but never used.","'CircularProgress' is defined but never used.","'LOADING_DATA' is defined but never used.","'errors' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'history', and 'text'. Either include them or remove the dependency array.",["302"],"'CardContent' is defined but never used.","'CardMedia' is defined but never used.","'FavoriteIcon' is defined but never used.","'TextField' is defined but never used.","'DeleteOutlineIcon' is defined but never used.","'Button' is defined but never used.","'LIKE_POST' is defined but never used.","'SUBMIT_COMMENT' is defined but never used.","'UNLIKE_POST' is defined but never used.","'DELETE_POST' is defined but never used.","'DELETE_COMMENT' is defined but never used.","'ChatIcon' is defined but never used.","'comment' is assigned a value but never used.","'setComment' is assigned a value but never used.",{"desc":"303","fix":"304"},{"desc":"305","fix":"306"},{"desc":"307","fix":"308"},{"desc":"309","fix":"310"},{"desc":"311","fix":"312"},{"desc":"309","fix":"313"},{"desc":"314","fix":"315"},{"desc":"305","fix":"316"},{"desc":"309","fix":"317"},{"desc":"318","fix":"319"},"Update the dependencies array to be: [history, user]",{"range":"320","text":"321"},"Update the dependencies array to be: [dispatch, state.ui.errors]",{"range":"322","text":"323"},"Update the dependencies array to be: [bio, imageUrl, website]",{"range":"324","text":"325"},"Update the dependencies array to be: [dispatch]",{"range":"326","text":"327"},"Update the dependencies array to be: [dispatch, userId]",{"range":"328","text":"329"},{"range":"330","text":"327"},"Update the dependencies array to be: [dispatch, props.user, user]",{"range":"331","text":"332"},{"range":"333","text":"323"},{"range":"334","text":"327"},"Update the dependencies array to be: [dispatch, history, imageUrl, text]",{"range":"335","text":"336"},[1582,1588],"[history, user]",[1728,1745],"[dispatch, state.ui.errors]",[1740,1742],"[bio, imageUrl, website]",[2032,2034],"[dispatch]",[2546,2548],"[dispatch, userId]",[720,722],[622,628],"[dispatch, props.user, user]",[2095,2112],[812,814],[3669,3679],"[dispatch, history, imageUrl, text]"]